SET SERVEROUTPUT ON

DECLARE
  V_STMT VARCHAR2(1024);
  V_CNT  INT;
BEGIN
  SELECT COUNT(*) INTO V_CNT FROM USER_TABLES WHERE TABLE_NAME = 'SRC_ORDERS'
  ;

  IF V_CNT = 1 THEN
    V_STMT := 'DROP TABLE SRC_ORDERS CASCADE CONSTRAINTS PURGE'
    ;
    EXECUTE IMMEDIATE V_STMT
    ;
  END IF
  ;
END
;
/

CREATE TABLE SRC_ORDERS (
  ORDER_ID CHAR(8) NOT NULL
  , SHOP_ID CHAR(4) NOT NULL
  , SHOP_NAME VARCHAR2(256)
  , RECEIVE_DATE DATE NOT NULL
  , PROCESS_FLG CHAR(1) NOT NULL
  , CONSTRAINT SRCORDERSX001 PRIMARY KEY (ORDER_ID)
)
;
CREATE INDEX SRCORDERSX002 ON SRC_ORDERS (RECEIVE_DATE)
;
GRANT SELECT ON &1..SRC_ORDERS TO &1
;
GRANT INSERT ON &1..SRC_ORDERS TO &1
;
GRANT UPDATE ON &1..SRC_ORDERS TO &1
;
GRANT DELETE ON &1..SRC_ORDERS TO &1
;

DECLARE
  V_NUM NUMBER(10);
  
  -- 仮受付
  PROCEDURE TEMPORARY_RECEIPT AS
  BEGIN
    V_NUM := 0
    ;
    FOR TEMPORARY_RECEIPT_CUR IN (
      SELECT SHOP_ID, TEMPORARY_RECEIPT_NUM
      FROM SRC_ORDERS_MASTER
      WHERE TEMPORARY_RECEIPT_NUM > 0
      ORDER BY SHOP_ID
    )
    LOOP
      INSERT INTO SRC_ORDERS
      SELECT
        '1' || TO_CHAR(ROWNUM + V_NUM, 'FM0000000') AS ORDER_ID
        , TEMPORARY_RECEIPT_CUR.SHOP_ID
        , TEMPORARY_RECEIPT_CUR.SHOP_ID || '_店舗名' AS SHOP_NAME
        , TO_DATE('&2', 'YYYYMMDD') + ROUND(DBMS_RANDOM.VALUE(0, 364)) AS RECEIVE_DATE
        , '1' AS PROCESS_FLG
      FROM
        DUAL CONNECT BY LEVEL <= TEMPORARY_RECEIPT_CUR.TEMPORARY_RECEIPT_NUM
      ;
      COMMIT
      ;
      V_NUM := V_NUM + TEMPORARY_RECEIPT_CUR.TEMPORARY_RECEIPT_NUM
      ;
    END LOOP
    ;
    DBMS_OUTPUT.PUT_LINE('仮受付データを' || V_NUM || '件作成しました。')
    ;
  END TEMPORARY_RECEIPT
  ;

  -- 受付済
  PROCEDURE ALREADY_ACCEPTED AS
  BEGIN
    V_NUM := 0
    ;
    FOR ALREADY_ACCEPTED_CUR IN (
      SELECT SHOP_ID, ALREADY_ACCEPTED_NUM
      FROM SRC_ORDERS_MASTER
      WHERE ALREADY_ACCEPTED_NUM > 0
      ORDER BY SHOP_ID
    )
    LOOP
      INSERT INTO SRC_ORDERS
      SELECT
        '2' || TO_CHAR(ROWNUM + V_NUM, 'FM0000000') AS ORDER_ID
        , ALREADY_ACCEPTED_CUR.SHOP_ID
        , ALREADY_ACCEPTED_CUR.SHOP_ID || '_店舗名' AS SHOP_NAME
        , TO_DATE('&3', 'YYYYMMDD') + ROUND(DBMS_RANDOM.VALUE(0, 364)) AS RECEIVE_DATE
        , '2' AS PROCESS_FLG
      FROM
        DUAL CONNECT BY LEVEL <= ALREADY_ACCEPTED_CUR.ALREADY_ACCEPTED_NUM
      ;
      COMMIT
      ;
      V_NUM := V_NUM + ALREADY_ACCEPTED_CUR.ALREADY_ACCEPTED_NUM
      ;
    END LOOP
    ;
    DBMS_OUTPUT.PUT_LINE('受付済データを' || V_NUM || '件作成しました。')
    ;
  END ALREADY_ACCEPTED
  ;
  
  -- 在庫確認中
  PROCEDURE IN_STOCK AS
  BEGIN
    V_NUM := 0
    ;
    FOR IN_STOCK_CUR IN (
      SELECT SHOP_ID, IN_STOCK_NUM
      FROM SRC_ORDERS_MASTER
      WHERE IN_STOCK_NUM > 0
      ORDER BY SHOP_ID
    )
    LOOP
      INSERT INTO SRC_ORDERS
      SELECT
        '3' || TO_CHAR(ROWNUM + V_NUM, 'FM0000000') AS ORDER_ID
        , IN_STOCK_CUR.SHOP_ID
        , IN_STOCK_CUR.SHOP_ID || '_店舗名' AS SHOP_NAME
        , TO_DATE('&4', 'YYYYMMDD') + ROUND(DBMS_RANDOM.VALUE(0, 364)) AS RECEIVE_DATE
        , '3' AS PROCESS_FLG
      FROM
        DUAL CONNECT BY LEVEL <= IN_STOCK_CUR.IN_STOCK_NUM
      ;
      COMMIT
      ;
      V_NUM := V_NUM + IN_STOCK_CUR.IN_STOCK_NUM
      ;
    END LOOP
    ;
    DBMS_OUTPUT.PUT_LINE('在庫確認中データを' || V_NUM || '件作成しました。')
    ;
  END IN_STOCK
  ;

  -- 発送準備中
  PROCEDURE PREPARING_TO_SHIP AS
  BEGIN
    V_NUM := 0
    ;
    FOR PREPARING_TO_SHIP_CUR IN (
      SELECT SHOP_ID, PREPARING_TO_SHIP_NUM
      FROM SRC_ORDERS_MASTER
      WHERE PREPARING_TO_SHIP_NUM > 0
      ORDER BY SHOP_ID
    )
    LOOP
      INSERT INTO SRC_ORDERS
      SELECT
        '4' || TO_CHAR(ROWNUM + V_NUM, 'FM0000000') AS ORDER_ID
        , PREPARING_TO_SHIP_CUR.SHOP_ID
        , PREPARING_TO_SHIP_CUR.SHOP_ID || '_店舗名' AS SHOP_NAME
        , TO_DATE('&5', 'YYYYMMDD') + ROUND(DBMS_RANDOM.VALUE(0, 364)) AS RECEIVE_DATE
        , '4' AS PROCESS_FLG
      FROM
        DUAL CONNECT BY LEVEL <= PREPARING_TO_SHIP_CUR.PREPARING_TO_SHIP_NUM
      ;
      COMMIT
      ;
      V_NUM := V_NUM + PREPARING_TO_SHIP_CUR.PREPARING_TO_SHIP_NUM
      ;
    END LOOP
    ;
    DBMS_OUTPUT.PUT_LINE('発送準備中データを' || V_NUM || '件作成しました。')
    ;
  END PREPARING_TO_SHIP
  ;

  -- 発送済
  PROCEDURE SHIPPED AS
  BEGIN
    V_NUM := 0
    ;
    FOR SHIPPED_CUR IN (
      SELECT SHOP_ID, SHIPPED_NUM
      FROM SRC_ORDERS_MASTER
      WHERE SHIPPED_NUM > 0
      ORDER BY SHOP_ID
    )
    LOOP
      INSERT INTO SRC_ORDERS
      SELECT
        '5' || TO_CHAR(ROWNUM + V_NUM, 'FM0000000') AS ORDER_ID
        , SHIPPED_CUR.SHOP_ID
        , SHIPPED_CUR.SHOP_ID || '_店舗名' AS SHOP_NAME
        , TO_DATE('&6', 'YYYYMMDD') + ROUND(DBMS_RANDOM.VALUE(0, 364)) AS RECEIVE_DATE
        , '5' AS PROCESS_FLG
      FROM
        DUAL CONNECT BY LEVEL <= SHIPPED_CUR.SHIPPED_NUM
      ;
      COMMIT
      ;
      V_NUM := V_NUM + SHIPPED_CUR.SHIPPED_NUM
      ;
    END LOOP
    ;
    DBMS_OUTPUT.PUT_LINE('発送済データを' || V_NUM || '件作成しました。')
    ;
  END SHIPPED
  ;

BEGIN
  DBMS_RANDOM.INITIALIZE(20240817)
  ;
  TEMPORARY_RECEIPT
  ;
  ALREADY_ACCEPTED
  ;
  IN_STOCK
  ;
  PREPARING_TO_SHIP
  ;
  SHIPPED
  ;
END
;
/